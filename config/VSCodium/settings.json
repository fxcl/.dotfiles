{
  "CodeGPT.apiKey": "Google",
  "CodeGPT.model": "chat-bison-001",
  "CodeGPT.query.language": "Chinese",
  "cSpell.userWords": [
    "Besu",
    "Blockscout",
    "dayjs",
    "exponentiated",
    "fastify",
    "Fastify",
    "hyperledger",
    "isbn",
    "Levysdev",
    "UNDELETABLE",
    "uuid",
    "xrpl"
    "Letterbook"
  ],
  "prettier.jsxSingleQuote": true,
  "RainbowBrackets.depreciation-notice": false,
  "bracketPairColorizer.depreciation-notice": false,
  "lldb.library": "/Library/Developer/CommandLineTools/Library/PrivateFrameworks/LLDB.framework/Versions/A/LLDB",
  "aws.profile": "profile:default",
  "aws.telemetry": false,
  "better-comments.highlightPlainText": true,
  "bracket-pair-colorizer-2.colorMode": "Consecutive",
  "bracket-pair-colorizer-2.forceIterationColorCycle": true,
  "bracket-pair-colorizer-2.showBracketsInGutter": true,
  "breadcrumbs.enabled": false,
  "conventionalCommits.emojiFormat": "emoji",
  "conventionalCommits.showEditor": true,
  "css.validate": false,
  "calva.evalOnSave": true,
  "calva.fmt.newIndentEngine": true,
  "calva.paredit.defaultKeyMap": "strict",
  "calva.prettyPrintingOptions": {
    "enabled": true,
    "maxLength": 50,
    "printEngine": "pprint",
    "width": 120
  },
  "calva.statusColor": {},
  "calva.keybindingsEnabled": true,
  "dart.flutterCreateAndroidLanguage": "kotlin",
  "dart.flutterCreateIOSLanguage": "swift",
  "dart.previewFlutterUiGuides": true,
  "dart.previewFlutterUiGuidesCustomTracking": true,
  "dart.previewLsp": true,
  "dart.warnWhenEditingFilesOutsideWorkspace": false,
  "debug.allowBreakpointsEverywhere": true,
  "debug.autoExpandLazyVariables": true,
  "debug.console.fontSize": 16,
  "debug.javascript.autoAttachFilter": "smart",
  "debug.onTaskErrors": "debugAnyway",
  "debug.inlineValues": true,
  "debug.internalConsoleOptions": "openOnSessionStart",
  "debug.openDebug": "openOnSessionStart",

  "deno.enable": true,
  "deno.lint": true,
  "deno.suggest.imports.hosts": {
    "https://deno.land": false
  },
  "deno.unstable": true,
  "deno.config": "",
  "deno.importMap": "./import_map.json",
  "diffEditor.renderSideBySide": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.codeLens": false,
  "diffEditor.diffAlgorithm": "experimental",
  "diffEditor.maxComputationTime": 0,
  "discord.workspaceExcludePatterns": [
    "nixpkgs"
  ],
  "editor.parameterHints.enabled": false,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.accessibilitySupport": "off",
  "editor.autoClosingBrackets":true,
  "editor.autoClosingDelete": "always",
  "editor.autoClosingOvertype": "always",
  "editor.autoClosingQuotes": "always",
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "never",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never"
  },
  "editor.cursorBlinking": "smooth",
  "editor.cursorStyle": "line",
  "editor.codeLensFontFamily": "'Zed Mono', \"FiraCode Nerd Font Mono\"; \"Noto Sans Mono CJK JP\"; monospace",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorSurroundingLines": 5,
  "editor.definitionLinkOpensInPeek": true,
  "editor.experimental.pasteActions.enabled": true,
  "editor.find.addExtraSpaceOnTop": false,
  "editor.find.autoFindInSelection": "multiline",
  "editor.foldingImportsByDefault": true,
  "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'zero'",
  "editor.fontSize": 18,
  "editor.formatOnSave": false,
  "editor.guides.indentation":  true,
  "editor.linkedEditing": true,
  "editor.lineNumbers": "relative",
  "editor.semanticHighlighting.enabled":true,
  "editor.showUnused": true,
  "editor.smoothScrolling":true,
  "editor.tabCompletion": "on",
  "editor.trimAutoWhitespace": true,
  "editor.hover.sticky": true,
  "editor.letterSpacing": 1.0,
  "editor.maxTokenizationLineLength": 10000,

  "editor.rulers": [
    72,
    80,
    100,
    120
  ],
  "editor.stickyScroll.enabled": true,
  "editor.stickyTabStops": true,
  "editor.suggest.preview": true,
  "editor.suggest.shareSuggestSelections": true,
  "editor.suggestSelection": "first",
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.useTabStops": false,
  "editor.wordWrapColumn": 120,
  "editor.wrappingIndent": "indent",
  "enable-proposed-api": [
    "github.copilot"
  ],
  "editor.detectIndentation": false,
  "editor.insertSpaces": false,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "extensions.ignoreRecommendations": true,

  "editor.copyWithSyntaxHighlighting": false,
  "editor.dragAndDrop": false,
  "editor.fontFamily": "UDEV Gothic 35 JPDOC",
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "editor.guides.bracketPairs": true,
  "editor.inlineSuggest.enabled": true,
  "editor.lineHeight": 0,
  "editor.matchBrackets": "near",
  "editor.minimap.enabled": false,
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },
  "editor.renderControlCharacters": true,
  "editor.renderLineHighlight": "all",
  "editor.renderWhitespace": "all",
  "editor.showFoldingControls": "always",
  "editor.tokenColorCustomizations": {},
  "explorer.": false,
  "explorer.openEditors.visible": 0,
  "editor.tabSize": 2,
  "editor.unicodeHighlight.includeComments": true,
  "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?　、。！？「」【】『』（）",
  "editor.wordWrap": "on",
  "explorer.incrementalNaming": "smart",
  "eslint.format.enable": true,
  "eslint.lintTask.enable": true,
  "evenBetterToml.formatter.alignEntries": true,
  "evenBetterToml.formatter.compactArrays": false,
  "evenBetterToml.formatter.compactInlineTables": false,
  "evenBetterToml.formatter.indentTables": true,
  "evenBetterToml.formatter.reorderKeys": false,
  "explorer.confirmDelete": false,
  "typescript.format.enable": false,
  "[c]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[cpp]": {
    "editor.defaultFormatter": "ccls-project.ccls"
  },
"[csv]": {
    "editor.wordWrap": "off"
  },
  "[log]": {
    "editor.wordWrap": "off"
  },
  "[tsv]": {
    "editor.insertSpaces": false,
    "editor.wordWrap": "off"
  },
  "[csharp]": {
    "editor.defaultFormatter": "csharpier.csharpier-vscode",
    "editor.formatOnSave": true
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[dotenv]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[elixir]": {
    "editor.defaultFormatter": "JakeBecker.elixir-ls"
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go",
    "editor.tabSize": 2
  },
  "[haskell]": {
    "editor.defaultFormatter": "haskell.haskell"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[clojure]": {
    "editor.wordSeparators": "\t ()\"':,;~@#$%^&{}[]`-./"
  },
  "[ignore]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[javascript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    },
    "editor.defaultFormatter": "vscode.typescript-language-features"
    // "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[java]": {
    "editor.defaultFormatter": "redhat.java"
  },
  "[prisma]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "metals.serverProperties": [],
  "metals.javaHome": "/Users/spreston/.jabba/jdk/adopt@1.11.0-11/Contents/Home",
  "[xml]": {
    "editor.defaultFormatter": "DotJoshJohnson.xml"
  },
  "[markdown]": {
    "editor.quickSuggestions": {
      "comments": false,
      "other": false,
      "strings": false
    },
    "editor.trimTrailingWhitespace": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "[properties]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[python]": {
    "editor.tabSize": 4,
    "editor.defaultFormatter": "ms-python.python",
    "editor.renderFinalNewline": "on",
    "editor.rulers": [
      88
    ],
    "editor.trimAutoWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true
  },
  "[python].editor.rulers": [
    72,
    78
  ],
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    // "editor.defaultFormatter": "matklad.rust-analyzer",
    "editor.fontLigatures": true,
    "editor.formatOnSave": true,
    "editor.renderFinalNewline": "on",
    "editor.rulers": [
      99
    ],
    "editor.trimAutoWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format",
    "editor.tabSize": 2,
    "files.eol": "\n"
  },
  "[typescript]": {
    // "editor.defaultFormatter": "vscode.typescript-language-features",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[astro]": {
    "editor.defaultFormatter": "astro-build.astro-vscode"
  },
  "[yaml]": {
    "editor.wordBasedSuggestionsMode": "currentDocument"
  },
  "explorer.confirmDragAndDrop": false,
  "explorer.excludeGitIgnore": true,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "//": "Last update at 4/29/2023, 2:04:58 PM",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "I*.cs": "$(capture).cs",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "tsconfig.json": "tsconfig.*.json",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "files.associations": {
    "*.config": "makefile",
    "*.py": "python",
    "*.cs": "csharp",
    "*.sol": "solidity",
    ".envrc": "shellscript"
  },
  "files.autoSave": "onWindowChange",
  "files.enableTrash": false,
  "files.eol": "\n",
  "files.exclude": {
    "**/*.exe": true,
    "**/*.o": true,
    "**/.DS_Store": true,
    "**/.browserslistrc": true,
    "**/.classpath": true,
    "**/.eslintrc.js": true,
    "**/.factorypath": true,
    "**/.git": true,
    "**/.github": true,
    "**/.gitignore": true,
    "**/.hg": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.svn": true,
    "**/CVS": true,
    "**/README.md": true,
    "**/babel.config.js": true,
    "**/node_modules": true,
    "**/package-lock.json": true,
    "**/result": true,
    "**/shims-tsx.d.ts": true,
    "**/shims-vue.d.ts": true,
    "**/tsconfig.json": true,
    "**/Thumbs.db": true,
    "**/.trunk/*out": true
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.watcherExclude": {
    "**/.ammonite": true,
    "**/.bloop": true,
    "**/.metals": true,
    "**/.trunk/*out": true
  },
  // "fennel-lsx.server-version": "bundled",
  // "vsc-fnlfmt.execPath": "fnlfmt",
  // "parinfer.dimParenTrails": false,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.allowForcePush": true,
  "git.autoRepositoryDetection": "subFolders",
  "git.fetchOnPull": true,
  "git.path": "/usr/local/bin/git",
  "git.suggestSmartCommit": false,
  "gitlens.currentLine.enabled": false,
  "gitlens.currentLine.pullRequests.enabled": false,
  "gitlens.plusFeatures.enabled": false,
  "gitlens.showWelcomeOnInstall": false,
  "gitlens.showWhatsNewAfterUpgrades": false,
  "github-enterprise.uri": "https://cocopilot.org",
  "github.copilot.advanced": {
    "authProvider": "github-enterprise",
    "debug.overrideChatEngine": "gpt-4"
  },
  "github.copilot.enable": {
    "*": true,
    "markdown": true,
    "plaintext": false,
    "yaml": false
  },
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.codeLens.enabled": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.defaultDateFormat": "H:mm:ss dd.MM.yy",
  "gitlens.defaultDateStyle": "absolute",
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": {
      "blame": true,
      "compare": false
    },
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },
  "gitlens.statusBar.alignment": "left",
  "gitlens.views.fileHistory.location": "explorer",
  "go.autocompleteUnimportedPackages": true,
  "go.languageServerExperimentalFeatures": {
    "diagnostics": false
  },
  "go.coverOnSave": true,
  "go.coverOnSingleTest": true,
  "go.coverageDecorator": {
    "coveredGutterStyle": "blockgreen",
    "coveredHighlightColor": "rgba(64,128,128,0.5)",
    "type": "gutter",
    "uncoveredGutterStyle": "blockred",
    "uncoveredHighlightColor": "rgba(128,64,64,0.25)"
  },
  "go.docsTool": "godoc",
  "go.formatTool": "goimports",
  "go.lintFlags": [
    "--disable-all",
    "--enable=golint",
    "--config=~/.gometalinter"
  ],
  "go.toolsManagement.autoUpdate": true,
  "go.useLanguageServer": true,
  "protoc": {
    "options": [
      "--proto_path=${workspaceRoot}/proto"
    ],
    "path": "protoc"
  },
  "http.proxy": "127.0.0.1:7890",
  "http.proxySupport": "on",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript..enabled": "never",
  "javascript.validate.enable": false,
  "javascript.suggest.enabled": false,
  "typescript.suggest.enabled": false,
  "markdown.preview.scrollEditorWithPreview": true,
  "markdown.preview.scrollPreviewWithEditor": true,
  "merge-conflict.autoNavigateNextConflict.enabled": true,
  "nix.enableLanguageServer": true,
  "nix.formatterPath": "/etc/profiles/per-user/kelvin/bin/nixpkgs-fmt",
  "nix.serverPath": "nixd",
  "[nix]": {
    "editor.defaultFormatter": "jnoortheen.nix-ide",
    // "editor.defaultFormatter": "brettm12345.nixfmt-classic-vscode",
    "editor.tabSize": 2
  },
  "npm.fetchOnlinePackageInfo": false,
  "pascal.format.indent": 4,
  "pascal.formatter.engine": "ptop",
  "perl.pls": "/nix/store/jh5m1577n32rvfrgva07ymaw4li78g47-perl5.38.2-PLS-0.905/bin/pls",
  "prettier.enable": false,
  "prettier.printWidth": 200,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "purescript.formatter": "purs-tidy",
  "python.insidersChannel": "off",
  "python.languageServer": "Default",
  "python.showStartPage": false,
  "redhat.telemetry.enabled": false,
  "rust-analyzer.assist.emitMustUse": true,
  "rust-analyzer.cargo.allFeatures": true,
  "rust-analyzer.cargo.unsetTest": [],
  "rust-analyzer.checkOnSave.command": "clippy",
  "rust-analyzer.checkOnSave.extraArgs": [
    "--",
    "-Wabsolute_paths_not_starting_with_crate",
    "-Welided_lifetimes_in_paths",
    "-Wexplicit_outlives_requirements",
    "-Wkeyword_idents",
    "-Wmacro_use_extern_crate",
    "-Wmeta_variable_misuse",
    "-Wmissing_abi",
    "-Wmissing_copy_implementations",
    "-Wmissing_debug_implementations",
    "-Wmissing_docs",
    "-Wnon_ascii_idents",
    "-Wnoop_method_call",
    "-Wpointer_structural_match",
    "-Wsingle_use_lifetimes",
    "-Wtrivial_casts",
    "-Wtrivial_numeric_casts",
    "-Wunreachable_pub",
    "-Wunused_extern_crates",
    "-Wunused_import_braces",
    "-Wunused_lifetimes",
    "-Wunused_qualifications",
    "-Wvariant_size_differences",
    "-Wclippy::pedantic",
    "-Wclippy::nursery",
    "-Wclippy::all"
  ],
  "rust-analyzer.debug.engine": "vadimcn.vscode-lldb",
  "rust-analyzer.diagnostics.experimental.enable": true,
  "rust-analyzer.hover.actions.references.enable": true,
  "rust-analyzer.hoverActions.references": true,
  "rust-analyzer.imports.granularity.enforce": true,
  "rust-analyzer.imports.granularity.group": "module",
  "rust-analyzer.imports.prefix": "self",
  "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "always",
  "rust-analyzer.lens.enumVariantReferences": true,
  "rust-analyzer.lens.methodReferences": true,
  "rust-analyzer.lens.references": true,
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.rustfmt.rangeFormatting.enable": true,
  "rust-analyzer.server.path": "rust-analyzer",
  "rust-analyzer.trace.extension": true,
  "rust-analyzer.updates.channel": "stable",
  "rust-analyzer.workspace.symbol.search.kind": "all_symbols",
  "rust-analyzer.workspace.symbol.search.scope": "workspace_and_dependencies",
  "scm.diffDecorations": "all",
  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/node_modules": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/tmp": true,
    "**/yarn.lock": true,
    "**/Gemfile.lock": true,
    "**/poetry.lock": true,
  },
  "search.quickOpen.includeSymbols": true,
  "search.seedOnFocus": true,
  "search.seedWithNearestWord": true,
  "search.showLineNumbers": true,
  "search.smartCase": true,
  "search.useGlobalIgnoreFiles": true,
  "search.useParentIgnoreFiles": true,
  "security.workspace.trust.untrustedFiles": "newWindow",
  "settingsSync.keybindingsPerPlatform": false,
  "git.openRepositoryInParentFolders": "never",
  "snapcode.transparentBackground": true,
  "tailwindCSS.includeLanguages": {
    "html": "html",
    "javascript": "javascript",
    "typescript": "typescript",
    "css": "css",
    "astro": "html"
  },
  "telemetry.enableCrashReporter": false,
  "telemetry.enableTelemetry": false,
  "telemetry.telemetryLevel": "off",
  "rest-client.fontSize": 13,
  "scm.alwaysShowActions": true,
  "scm.defaultViewMode": "tree",
  "scm.inputFontFamily": "editor",
  "terminal.external.osxExec": "Warp.app",
  "terminal.integrated.confirmOnExit": "hasChildProcesses",
  "terminal.integrated.fontWeightBold": "normal",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.profiles.osx": {
    "fish": {
      "icon": "terminal",
      "path": "/opt/homebrew/bin/fish"
    }
  },
  "terminal.integrated.scrollback": 10000,

  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.drawBoldTextInBrightColors": false,
  "terminal.integrated.experimentalUseTitleEvent": true,
  "terminal.integrated.fontFamily": "'Monolisa', Hack Nerd Font','Source Code Pro for Powerline','MesloLGS NF','Source Code Pro for Powerline','Hack Nerd Font'",
  "terminal.integrated.gpuAcceleration": "canvas",
  "terminal.integrated.letterSpacing": 1.0,
  "terminal.integrated.lineHeight": 1.3,
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "args": [
        "-NoLogo"
      ],
      "icon": "terminal-powershell",
      "source": "PowerShell"
    }
  },
  "terminal.integrated.rendererType": "canvas",
  "terminal.integrated.shell.linux": "/bin/zsh",
  "terminal.integrated.shellIntegration.decorationsEnabled": "never",
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.tabFocusMode": false,
  "testing.alwaysRevealTestOnStateChange": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.tsserver.log": "off",
  "javascript.suggest.autoImports": true,
  "javascript.format.semicolons": "remove",
  "typescript.suggest.autoImports": true,
  "liveshare.featureSet": "insiders",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveshare.presence": false,
  "update.mode": "none",
  "vetur.format.defaultFormatterOptions": {
    "js-beautify-html": {
      "wrap_attributes": "aligned-multiple"
    },
    "prettyhtml": {
      "printWidth": 400,
      "wrapAttributes": false
    }
  },
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "window.menuBarVisibility": "toggle",
  "window.titleBarStyle": "custom",
  "window.zoomLevel": 0.8,
  "window.autoDetectHighContrast": false,
  "window.commandCenter": false,
  "window.newWindowDimensions": "inherit",
  "workbench.statusBar.visible": true,
  "workbench.colorCustomizations": {
    "editorBracketHighlight.foreground1": "#FFD700",
    "editorBracketHighlight.foreground2": "#DA70D6",
    "editorBracketHighlight.foreground3": "#87CEFA",
    "editorBracketHighlight.foreground4": "#FA8072",
    "editorBracketHighlight.foreground5": "#7CFC00",
    "editorBracketHighlight.foreground6": "#FF8C00"
  },
  "workbench.colorTheme": "Default Dark+",
  "workbench.editor.decorations.badges": true,
  "workbench.editor.decorations.colors": true,
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromCodeNavigation": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.tabCloseButton": "left",
  "workbench.editor.tabSizing": "shrink",
  "workbench.editor.untitled.experimentalLanguageDetection": true,
  "workbench.editor.wrapTabs": true,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter.notebook.ipynb",
    "*.so": "default"
  },
  "workbench.fontAliasing": "antialiased",
  "workbench.iconTheme": "file-icons",
  "workbench.list.smoothScrolling": true,
  "workbench.preferredDarkColorTheme": "Vitesse Dark",
  "workbench.preferredLightColorTheme": "Vitesse Light",
  "workbench.productIconTheme": "icons-carbon",
  "workbench.settings.editor": "json",
  "workbench.sideBar.location": "left",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.statusBar.feedback.visible": false,
  "workbench.tree.expandMode": "singleClick",
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "workbench.editor.showTabs": "multiple",
  "workbench.view.alwaysShowHeaderActions": true,
  "workbench.activityBar.location": "hidden",
  "workbench.tree.indent": 10,
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "yaml.schemaStore.enable": true,
  "yaml.schemas": {
    "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yaml"
  },
  "json.schemas": [],
  "workbench.editor.empty.hint": "hidden"
}
